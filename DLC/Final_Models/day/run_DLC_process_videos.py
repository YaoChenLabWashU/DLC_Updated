# IMPORTANT: This file is used to analyze videos using a pre-trained model.

'''
set the config file path in your root directory 
(this is the config file generated by DLC locally 
when you create your project)
'''

# docstring: https://github.com/DeepLabCut/DeepLabCut/wiki/DOCSTRINGS 

#Setup your project variables:
# PLEASE EDIT THESE:


# Testing the bash script
print("--------------- Confirming there are no temporary video files ------------")
import subprocess
from subprocess import call
with open('/storage1/fs1/yaochen/Active/DLC/Final_Models/day/temporary_remove.sh', 'rb') as file:
    script = file.read()
rc = call(script, shell=True)
print("------------- Temporary files removed ---------------------")

ProjectFolderName = '/storage1/fs1/yaochen/Active/DLC/Final_Models/day'
VideoType = 'mp4' 

#don't edit these:
videofile_path = [ProjectFolderName+'/Testing/'] #Enter the list of videos or folder to analyze.
print("Video Path: ", videofile_path)

#This creates a path variable that links to your google drive copy
#No need to edit this, as you set it up before: 
path_config_file = ProjectFolderName+'/config.yaml'
print("Config file path: ",path_config_file)

import deeplabcut
deeplabcut.__version__

# Start analyzing videos
'''
This function analyzes the new video. The user can choose the best model from the evaluation results and specify the correct snapshot index.
(We don't really need this since I have tested the model already)
'''
print("----- Analyzing videos -----")

deeplabcut.analyze_videos(path_config_file,videofile_path, videotype=VideoType, save_as_csv = True)

print("----- Analyzing done!! -----")

print("----- Filtering (Median) ------")
deeplabcut.filterpredictions(path_config_file, videofile_path)
print("------ Median Filtering done -----")
# plotting trajectories. 
print("----- Plotting trajectories begin!! -----")
deeplabcut.plot_trajectories(path_config_file,videofile_path, videotype=VideoType)
print("----- Plotting trajectories done!! :) -----")

# Create labeled videos
'''
This function is for visualiztion purpose and can be used to create a video in .mp4 
format with labels predicted by the network. This video is saved in the same directory 
where the original video resides. 
'''
print("----- Creating labeled videos begins -----")
deeplabcut.create_labeled_video(path_config_file,videofile_path, videotype=VideoType, draw_skeleton = True)
print("----- Done creating labeled videos!! :)) -----")

# Extract Outlier frames
print("----- Extracting outlier frames -----")
#Get outlier frames
deeplabcut.extract_outlier_frames(path_config_file, videofile_path, videotype=VideoType, shuffle=1, trainingsetindex=0, outlieralgorithm='jump', 
comparisonbodyparts='all', epsilon=20, p_bound=0.01, ARdegree=3, MAdegree=1, alpha=0.01, extractionalgorithm='kmeans', automatic=True)
print("----- Done extracting outlier frames!! :)) -----")

print(" -------------------- DLC Process Done! --------------------")

